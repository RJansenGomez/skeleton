buildscript {
    ext {
        springBootVersion = '2.3.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

group 'com.rjansen.skeleton'
version '0.0.1'
sourceCompatibility = '1.15'

repositories {
    jcenter()
}

jacoco {
    toolVersion = '0.8.5'
}


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    runtime group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all', version: '2.2.4.RELEASE'
    compile(
            'org.postgresql:postgresql:42.2.14',
            'org.liquibase:liquibase-core:4.0.0',
            'io.springfox:springfox-swagger2:2.9.2',
            'io.springfox:springfox-swagger-ui:2.9.2'
    )
    implementation('org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.kafka:spring-kafka')

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//        runtimeOnly('org.postgresql:postgresql',
//                'org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR2')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.springframework.kafka:spring-kafka-test',
            'org.springframework.security:spring-security-test')
    testCompile('org.testcontainers:testcontainers:1.14.1',
            'com.h2database:h2:1.4.200'
    )
}

test {
    useJUnitPlatform()
}
configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

}


test {
    useJUnitPlatform()
}

jacoco {
    reportsDir = file("$buildDir/jacoco")
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}


